web.http.port=19190
web.http.path=/api
web.http.public.port=19191
web.http.public.path=/public
web.http.control.port=19192
web.http.control.path=/control
web.http.management.port=19193
web.http.management.path=/management
web.http.protocol.port=19194
web.http.protocol.path=/protocol
web.http.version.port=19195
web.http.version.path=/version



### keycloak config
edc.oauth.client.id=react_client
edc.oauth2.client.id=react_client
edc.oauth2.client.secret=9mMlXu2BwI5344VuFvznnOi4kY5vhXKS
edc.oauth2.token.url=http://localhost:8080/auth/realms/DSB/protocol/openid-connect/token
edc.oauth2.authorization.url=http://localhost:8080/auth/realms/DSB/protocol/openid-connect/auth
edc.transfer.proxy.token.verifier.publickey.alias=public-key
edc.transfer.proxy.token.signer.privatekey.alias=private-key
edc.oauth.certificate.alias=public-key
edc.oauth.private.key.alias=private-key
edc.oauth.token.url=http://localhost:8080/realms/DSB/protocol/openid-connect/token
edc.oauth.provider.jwks.url=http://localhost:8080/realms/DSB/protocol/openid-connect/certs
edc.oauth.provider.audience=http://localhost:8080/auth/realms/DSB/protocol/openid-connect/token
edc.api.auth.dac.key.url=http://localhost:8080/realms/DSB/protocol/openid-connect/certs
edc.iam.sts.oauth.token.url=http://localhost:8080/realms/DSB/protocol/openid-connect/token





#edc.api.auth.dac.key.url=http://localhost:8080/realms/dsb/broker/openid-connect/endpoint
#edc.oauth.certificate.alias=publicKey
#edc.oauth.private.key.alias=aliasSecret
#edc.oauth.token.url=http://localhost:8080/realms/dsb/protocol/openid-connect/token
#edc.oauth.client.id=client_edc
#edc.oauth.client.secret=AFP93dkqK2vWMsQ60K8PkFn9bmJp3H9i
#edc.oauth.scope=consumer
#edc.transfer.proxy.token.verifier.publickey.alias=public-key
#edc.transfer.proxy.token.signer.privatekey.alias=private-key
#edc.iam.sts.oauth.token.url=http://localhost:8080/realms/dsb/protocol/openid-connect/token
#edc.oauth.provider.jwks.url=http://localhost:8080/realms/dsb/protocol/openid-connect/certs


#edc.hostname=localhost
#edc.transfer.proxy.token.verifier.publickey.alias=public-key
#edc.transfer.proxy.token.signer.privatekey.alias=private-key
#edc.iam.issuer.id=issuer_id

# oauth: https://github.com/eclipse-edc/Connector/tree/main/extensions/common/iam/oauth2/oauth2-core
#DEBUG 2025-02-19T17:09:54.8067587 Config value: no setting found for 'edc.oauth.validation.nbf.leeway', falling back to default value '10'
#DEBUG 2025-02-19T17:09:54.8077601 Config value: no setting found for 'edc.oauth.validation.issued.at.leeway', falling back to default value '0'
#DEBUG 2025-02-19T17:09:54.8097589 Config value: no setting found for 'edc.oauth.provider.jwks.refresh', falling back to default value '5'
#DEBUG 2025-02-19T17:09:54.8097589 Config value: no setting found for 'edc.oauth.token.expiration', falling back to default value '5'
#DEBUG 2025-02-19T17:09:54.8107611 Config value: no setting found for 'edc.oauth.token.resource.enabled', falling back to default value 'false'
#INFO 2025-02-19T17:09:54.8147645 No value was configured for 'edc.oauth.validation.issued.at.leeway'. Consider setting a leeway of 2-5s in production to avoid problems with clock skew.
#DEBUG 2025-02-19T17:09:54.8157593 Resolving secret certificate
#SEVERE 2025-02-19T17:09:54.8177634 Error booting runtime: Public certificate not found: certificate



#edc.iam.sts.oauth.token.url=https://token-url.daps
#edc.iam.sts.oauth.client.id=client_id
#edc.iam.sts.oauth.client.secret.alias=alias
#edc.dpf.selector.url=https://selector.com
#edc.api.auth.dac.key.url=https://auth.com
#
#####
#
#edc.api.auth.key=password
#edc.dsp.callback.address=http://localhost:19194/protocol
#edc.participant.id=provider
#edc.ids.id=urn:connector:provider